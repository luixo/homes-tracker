import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { CheckData, getLastKey } from "../server/checkers";
import { globalLogger } from "../server/logger";
import { getS3Key } from "../server/services/s3";
import styles from "../styles/Home.module.css";

type Props = {
  data: CheckData<unknown>;
  error?: string;
};

const Home: NextPage<Props> = (props) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>All the data:</div>
        <div>{JSON.stringify(props.data, null, 4)}</div>
        {props.error ? (
          <>
            <div>Error:</div>
            <div>{props.error}</div>
          </>
        ) : null}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  const logger = globalLogger.child({ handler: "index" });
  try {
    const prevKey = await getLastKey(logger);
    const lastResults = prevKey
      ? await getS3Key<CheckData<unknown>>(logger, prevKey)
      : [];
    return {
      props: {
        data: lastResults || [],
      },
    };
  } catch (e) {
    return {
      props: {
        data: [],
        error: String(e),
      },
    };
  }
};

export default Home;
